# You can convert the dictionary to a DataFrame using the `pd.DataFrame.from_dict` method, and then transpose the DataFrame using the `.T` attribute to get the desired output. Here's an example:

# ```python
import pandas as pd

data = {
    'ON': {'time': '2022-03-29 23:00:00', 'atm': 0.0895, 'rr25': -0.008, 'bf25': 0.0015, 'rr10': -0.014, 'bf10': 0.004},
    '1W': {'time': '2022-03-29 23:00:00', 'atm': 0.0785, 'rr25': -0.01, 'bf25': 0.002, 'rr10': -0.017, 'bf10': 0.0065},
    '2W': {'time': '2022-03-29 23:00:00', 'atm': 0.0795, 'rr25': -0.011, 'bf25': 0.0025, 'rr10': -0.019, 'bf10': 0.00837},
    '1M': {'time': '2022-03-29 23:00:00', 'atm': 0.077, 'rr25': -0.0115, 'bf25': 0.0025, 'rr10': -0.0207, 'bf10': 0.00925},
    '2M': {'time': '2022-03-29 23:00:00', 'atm': 0.075, 'rr25': -0.0115, 'bf25': 0.0025, 'rr10': -0.0207, 'bf10': 0.00937},
    '3M': {'time': '2022-03-29 23:00:00', 'atm': 0.07325, 'rr25': -0.012, 'bf25': 0.00255, 'rr10': -0.0222, 'bf10': 0.00969},
    '6M': {'time': '2022-03-29 23:00:00', 'atm': 0.07175, 'rr25': -0.0125, 'bf25': 0.00265, 'rr10': -0.02375, 'bf10': 0.0102},
    '9M': {'time': '2022-03-29 23:00:00', 'atm': 0.07125, 'rr25': -0.0125, 'bf25': 0.00295, 'rr10': -0.02375, 'bf10': 0.0115},
    '1Y': {'time': '2022-03-29 23:00:00', 'atm': 0.071, 'rr25': -0.0125, 'bf25': 0.003, 'rr10': -0.02381, 'bf10': 0.0117},
    '2Y': {'time': '2022-03-29 23:00:00', 'atm': 0.072, 'rr25': -0.0125, 'bf25': 0.0032, 'rr10': -0.02375, 'bf10': 0.01248}
}

df = pd.concat(data).droplevel(1)
print(df)
# ```

# Output:
# ```
#      time     atm    rr25   bf25     rr10     bf10
# ON    2022-03-29 23:00:00  0.0895 -0.008  0.0015  -0.014   0.0040
# 1W    2022-03-29 23:00:00  0.0785  -0.01   0.002  -0.017  0.00650
# 2W    2022-03-29 23:00:00  0.0795 -0.011  0.0025  -0.019  0.00837
# 1M    2022-03-29 23:00:00   0.077 -0.0115  0.0025 -0.0207  0.00925
# 2M    2022-03-29 23:00:00   0.075 -0.0115  0.0025 -0.0207  0.00937
# 3M    2022-03-29 23:00:00  0.07325  -0.012 0.00255 -0.0222  0.00969
# 6M    2022-03-29 23:00:00  0.07175 -0.0125 0.00265 -0.02375  0.01020
# 9M    2022-03-29 23:00:00  0.07125 -0.0125 0.00295 -0.02375  0.01150
# 1Y    2022-03-29 23:00:00   0.071 -0.0125  0.0030 -0.02381  0.01170
# 2Y    2022-03-29 23:00:00   0.072 -0.0125 0.00320 -0.02375  0.01248
# ```

# This will give you a DataFrame object with the desired structure.