import networkx as nx
import numpy as np

def myFunc(n, p):
    G = nx.generators.random_graphs.gnp_random_graph(n, p)
    adjacency_matrix = nx.to_numpy_matrix(G)
    return adjacency_matrix

# Test cases
assert myFunc(10, 0.9) == np.array([[0., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
                                    [1., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
                                    [1., 1., 0., 0., 0., 1., 1., 1., 1., 1.],
                                    [1., 1., 0., 0., 0., 0., 0., 1., 1., 1.],
                                    [1., 1., 0., 0., 0., 0., 1., 0., 0., 0.],
                                    [1., 1., 1., 0., 0., 0., 0., 0., 0., 0.],
                                    [1., 1., 1., 0., 1., 0., 0., 0., 1., 0.],
                                    [1., 1., 1., 1., 0., 0., 0., 0., 0., 0.],
                                    [1., 1., 1., 1., 0., 0., 1., 0., 0., 0.],
                                    [1., 1., 1., 1., 0., 0., 0., 0., 0., 0.]])


assert myFunc(5, 0.5) == np.array([[0., 1., 1., 0., 1.],
                                   [1., 0., 1., 1., 0.],
                                   [1., 1., 0., 1., 1.],
                                   [0., 1., 1., 0., 0.],
                                   [1., 0., 1., 0., 0.]])